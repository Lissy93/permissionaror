export const input = {
  meta: {
    permissions: "Permissions",
    output: "Output"
  }
};

$ const roles = ["owner", "group", "public"];
$ const permissions = ["r", "w", "x"];

$ const permState = {
  owner: { r: true, w: false, x: false },
  group: { r: true, w: false, x: false },
  public: { r: false, w: false, x: false }
};

// $ const togglePerm = (role, perm) => {
//   console.log(`Toggling ${perm} for ${role}`);
//   permState[role][perm] = !permState[role][perm];
// };

$ const permNames = {
  r: "read",
  w: "write",
  x: "execute"
};



static function hey(event) {
  // this.emit("email-change", { email: 'hii' });
  console.log("IT WORKS!", event);
}

static function handleToggle(event) {
  // this.emit("email-change", { email: 'hii' });
  console.log("IT WORKS!", event);
}

<div class="w-full max-w-7xl mx-auto px-4">
  <div class="mt-6 grid grid-cols-1 gap-4 md:grid-cols-2">
    <Card title=($global.meta.subheadings?.permissions)>
      <@cardControls>
        <div class="flex gap-2">
          <Button variant="neutral" text="Reset" />
          <Button variant="danger" text="Deny All" />
        </div>
      </@cardControls>

      <table class="border-separate border-spacing-2">
        <thead>
          <tr>
            <th class=""></th>
            <for|perm| of=permissions>
              <th class="text-left capitalize w-24">${permNames[perm]}</th>
            </for>
          </tr>
        </thead>
        <tbody>
          <for|role| of=roles>
            <tr>
              <td class="capitalize font-semibold">${role}</td>
              <for|perm| of=permissions>
                <td>
                  <Toggle
                    label=(perm.toUpperCase())
                    checked=(permState[role][perm])
                    on-toggle(handleToggle)
                  />
                </td>
              </for>
            </tr>
          </for>
        </tbody>
      </table>


      <div>
        <!-- TODO:
          - Add a grid of toggles, for Owner/Group/Public (y-axis) and Read/Write/Execute (x-axis)
          - Store state of each toggle in a reactive variable
          - Clicking any of the rows or columns should toggle the state of the corresponding permissions
        -->
      </div>

    </Card>
    <div class="flex gap-4 flex-col">
    <Card title=($global?.meta?.subheadings?.output)>
      <p>TODO</p>
    </Card>
    <Card title=($global?.meta?.subheadings?.exampleCommands)>
      <p>TODO</p>
    </Card>
    </div>
    <div class="col-span-1 md:col-span-2">
      // <AboutChmod />
    </div>
  </div>
</div>



// //////////// WORKING CODE ////////////
// static function hey(event) {
//   // this.emit("email-change", { email: 'hii' });
//   console.log("IT WORKS!", event);
// }


// <Card title=($global?.meta?.subheadings?.output)>
//   <Toggle
//     label="Label"
//     checked=true
//     on-toggle(hey)
//   />
// </Card>
