import { t, get } from "../i18n";

class {
    onCreate() {
        this.state = {
          permState: {
            owner: { r: true, w: false, x: false },
            group: { r: true, w: false, x: false },
            public: { r: false, w: false, x: false }
          }
        };
    }
    increment() {
        this.state.count++;
    }
}


$ const roles = ["owner", "group", "public"];
$ const permissions = ["r", "w", "x"];

$ const permNames = {
  r: "read",
  w: "write",
  x: "execute"
};

static function handleToggle(event) {
  console.log('===> Success! <===');
  console.log(event);
  const { role, perm, checked } = event;
  console.log(`Toggling ${role} permission for ${perm}: ${checked}`);
  this.state.permState[role][perm] = checked;
  console.log(this.state.permState)
}

<div class="w-full max-w-7xl mx-auto px-4">
  <div class="mt-6 grid grid-cols-1 gap-4 md:grid-cols-2">
    <Card title=(get("subheadings.permissions"))>
      <@cardControls>
        <div class="flex gap-2">
          <Button variant="neutral" text="Reset" />
          <Button variant="danger" text="Deny All" />
        </div>
      </@cardControls>

      <table class="border-separate border-spacing-2">
        <thead>
          <tr>
            <th class=""></th>
            <for|perm| of=permissions>
              <th class="text-left capitalize w-24">${permNames[perm]}</th>
            </for>
          </tr>
        </thead>
        <tbody>
          <for|role| of=roles>
            <tr>
              <td class="capitalize font-semibold">${role}</td>
              <for|perm| of=permissions>
                <td>
                  <Toggle
                    label=(perm.toUpperCase())
                    checked=(state.permState[role][perm])
                    on-toggle(handleToggle)
                    role=(role)
                    perm=(perm)
                  />
                </td>
              </for>
            </tr>
          </for>
        </tbody>
      </table>


      <div>
        <!-- TODO:
          - Add a grid of toggles, for Owner/Group/Public (y-axis) and Read/Write/Execute (x-axis)
          - Store state of each toggle in a reactive variable
          - Clicking any of the rows or columns should toggle the state of the corresponding permissions
        -->
      </div>

    </Card>
    <div class="flex gap-4 flex-col">
    <Card title=(get("subheadings.output"))>
      <p>TODO</p>
    </Card>
    <Card title=(get("subheadings.exampleCommands"))>
      <p>TODO</p>
    </Card>
    </div>
    <div class="col-span-1 md:col-span-2">
      <AboutChmod />
    </div>
  </div>
</div>
