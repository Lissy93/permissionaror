{
  "title": "Permissionator",
  "titleLong": "Permissionator | CHMOD कैलकुलेटर",
  "subtitle": "Linux फ़ाइल अनुमतियाँ जनरेट, कन्वर्ट और वेरिफ़ाई करने के लिए chmod कैलकुलेटर",
  "subheadings": {
    "permissions": "अनुमतियाँ",
    "output": "आउटपुट",
    "exampleCommands": "उदाहरण कमांड",
    "aboutChmod": "chmod क्या है?",
    "commonPresets": "आम प्रीसेट",
    "specialBits": "विशेष बिट्स",
    "customOctal": "कस्टम ऑक्टल",
    "outputFile": "आउटपुट विकल्प",
    "explanation": "इसका मतलब",
    "octalBreakdown": "यह कैसे निकाला गया",
    "cheatSheet": "चीट शीट"
  },
  "nav": {
    "subtitle": "Linux फ़ाइल अनुमतियाँ जनरेट, कन्वर्ट और वेरिफ़ाई करने के लिए chmod कैलकुलेटर",
    "viewOnGitHub": "GitHub",
    "viewOnGitHubTitle": "GitHub पर Permissionator का सोर्स कोड देखो, एडिट करो, डाउनलोड करो",
    "viewOnGitHubAria": "GitHub पर chmod कैलकुलेटर देखें",
    "learnChmod": "chmod सीखो",
    "learnChmodTitle": "chmod कमांड के बारे में",
    "learnChmodAria": "chmod कमांड के बारे में सब कुछ सीखो",
    "chmodCalculator": "chmod कैलकुलेटर",
    "chmodCalculatorTitle": "Linux फ़ाइल अनुमतियाँ जनरेट करने के लिए chmod कैलकुलेटर इस्तेमाल करो",
    "chmodCalculatorAria": "chmod कैलकुलेटर आज़माओ",
    "settingsTitle": "डार्क मोड पर स्विच करो या भाषा बदलो"
  },
  "what": {
    "aboutChmod": "Linux में फ़ाइल अनुमतियाँ तय करती हैं कि कौन किसी फ़ाइल को पढ़, लिख/एडिट और चला सकता है। इन अनुमतियों को सेट करने के लिए chmod कमांड इस्तेमाल होती है।",
    "aboutChmod2": "ये अनुमतियाँ Linux और UNIX-जैसे सिस्टम्स का कोर फीचर हैं। ये अनअथराइज़्ड एक्सेस/बदलाव रोकती हैं, गलती से होने वाले चेंज से बचाती हैं, और सुनिश्चित करती हैं कि सिर्फ सही यूज़र ही प्रोग्राम चला सकें।",
    "aboutChmod3": "परमिशन सेट/अपडेट करने के लिए हम `chmod` कमांड का फॉर्मेट `chmod [permissions] [file/directory]` इस्तेमाल करते हैं। परमिशन 8-आधारी (जैसे 755) या सिंबॉलिक फॉर्म (जैसे u=rwx,g=rx,o=rx) में लिखी जा सकती हैं। क्रम हमेशा यही रहता है: (1) यूज़र, (2) ग्रुप, (3) अन्य/पब्लिक।",
    "commonExamples": "आम उदाहरण",
    "commonPresets": [
      {
        "number": "chmod 600 ~/.ssh/id_rsa",
        "description": "मालिक पढ़/लिख सकता है; SSH कुंजियों जैसी निजी फ़ाइलें"
      },
      {
        "number": "chmod 644 /var/www/html/index.html",
        "description": "मालिक पढ़/लिख सकता है; बाकी सब पढ़ सकते हैं; सामान्य टेक्स्ट फ़ाइलें"
      },
      {
        "number": "chmod 700 /home/user/private_script.sh",
        "description": "मालिक के पास फुल कंट्रोल; निजी स्क्रिप्ट्स या डायरेक्टरीज़"
      },
      {
        "number": "chmod 755 /usr/local/bin/my_script.sh",
        "description": "मालिक और ग्रुप यूज़र फुल एक्सेस, बाकी यूज़र सिर्फ पढ़ और चला सकते हैं"
      },
      {
        "number": "chmod 775 /shared/project",
        "description": "सब पढ़ और चला सकते हैं, पर लिख सिर्फ मालिक कर सकता है; शेयर की गई डायरेक्टरीज़ के लिए अच्छा"
      }
    ],
    "cards": [
      {
        "heading": "ऑक्टल की बुनियाद",
        "description": "हर रोल के लिए एक अंक: पढ़ना=4, लिखना=2, चलाना=1। जोड़कर अंक बनाओ: जैसे rwx = 7, rw- = 6, r-x = 5, r-- = 4। आम मोड: फ़ाइलों के लिए 644, डायरेक्टरीज़ के लिए 755।"
      },
      {
        "heading": "सिंबॉलिक फ़ॉर्म",
        "description": "यूज़र (u), ग्रुप (g), अन्य (o) के लिए +, - या = का उपयोग करो। उदाहरण: chmod u=rw,g=r,o= file.txt मालिक को पढ़/लिख देता है, ग्रुप को पढ़, और दूसरों को कोई एक्सेस नहीं।"
      },
      {
        "heading": "विशेष बिट्स",
        "description": "setuid बाइनरी को मालिक के अधिकारों से चलाता है; setgid ग्रुप के अधिकारों से; sticky शेयर डायरेक्टरीज़ में यूज़र्स को दूसरों की फ़ाइलें डिलीट करने से रोकता है (जैसे /tmp)।"
      }
    ]
  },
  "examples": {
    "1": {
      "title": "उदाहरण #1 - सिंबॉलिक फ़ॉर्म",
      "explanation": "यह कमांड मालिक को पढ़ने, लिखने और चलाने की अनुमति देगा, और ग्रुप व बाकी यूज़र्स को पढ़ने और चलाने (पर लिखने नहीं) की।"
    },
    "2": {
      "title": "उदाहरण #2 - ऑक्टल नोटेशन",
      "explanation": "यह कमांड मालिक को पढ़ने, लिखने और चलाने की अनुमति देगा, और ग्रुप व बाकी यूज़र्स को पढ़ने और चलाने (पर लिखने नहीं) की।"
    },
    "3": {
      "title": "उदाहरण #3 - एक परमिशन अपडेट करना",
      "explanation": "यह कमांड ग्रुप से लिखने की परमिशन हटाएगा, पर पढ़ना और चलाना जैसा है वैसा रहेगा। मालिक और अन्य प्रभावित नहीं होंगे।"
    },
    "4": {
      "title": "उदाहरण #4 - एक परमिशन अपडेट करना",
      "explanation": "मालिक को चलाने की परमिशन दो, पढ़ना और लिखना जस का तस रहे। ग्रुप और अन्य प्रभावित नहीं होंगे। नीचे पूरी ऑप्शंस लिस्ट है।"
    },
    "5": {
      "title": "उदाहरण #5 - आम प्रीसेट — क्विक रेफरेंस",
      "explanation": "यह फ़ाइल को मालिक के लिए पढ़ने/लिखने योग्य और ग्रुप व अन्य के लिए सिर्फ़ पढ़ने योग्य बना देगा। याद रखो: पहली अंक यूज़र, दूसरी ग्रुप, तीसरी अन्य। नीचे की क्विक रेफरेंस से अपनी परमिशन बना सकते हो।"
    }
  },
  "singlePermissionTool": {
    "title": "एकल अनुमति chmod जनरेटर",
    "description1": "यह टूल एक ही परमिशन बदलने के लिए chmod कमांड जनरेट करता है।",
    "description2": "मतलब बाकी सारी परमिशन वैसी ही रहेंगी। किसी दिए गए यूज़र टाइप के लिए तुम आसानी से एक परमिशन बदल/जोड़/हटा सकते हो।",
    "outputLabel": "जनरेटेड कमांड",
    "useThis": "इस कमांड का उपयोग करो"
  },
  "explain": {
    "roles": {
      "owner": "फ़ाइल का मालिक",
      "group": "समूह के उपयोगकर्ता",
      "public": "बाकी सभी"
    },
    "permissions": {
      "r": "पढ़ना",
      "w": "लिखना",
      "x": "चलाना"
    },
    "explanation": {
      "can": "कर सकता है",
      "cannot": "नहीं कर सकता",
      "and": "और",
      "butNot": "पर नहीं",
      "butNoOneElse": "पर किसी और को नहीं",
      "cannotDoAnything": "ना पढ़ सकता, ना लिख सकता, ना चला सकता",
      "noAccessForOthers": "किसी और को पहुँच नहीं"
    },
    "everyone": "सब"
  },
  "customExplanations": {
    "777": "सबके लिए पढ़/लिख/चलाने का पूरा एक्सेस — टेस्ट या अस्थायी पब्लिक डायरेक्टरी के लिए ठीक, पर प्रोडक्शन में बेहद असुरक्षित क्योंकि कोई भी फ़ाइलें बदल/डिलीट कर सकता है।",
    "755": "डायरेक्टरी और एक्सिक्यूटेबल्स के लिए आम — मालिक बदल सकता है, बाकी पढ़ और चला सकते हैं। पब्लिक स्क्रिप्ट्स या वेब सर्वर डायरेक्टरी के लिए सुरक्षित।",
    "750": "मालिक के पास फुल कंट्रोल, ग्रुप पढ़/चला सकता है, अन्य को एक्सेस नहीं — टीम-शेयर स्क्रिप्ट्स के लिए अच्छा, बाहरी यूज़र्स ब्लॉक रहते हैं।",
    "700": "सिर्फ़ मालिक पढ़, लिख और चला सकता है — निजी स्क्रिप्ट्स या ~/.ssh जैसी कॉन्फ़िग डायरेक्टरी के लिए आदर्श।",
    "644": "मालिक पढ़/लिख सकता है, बाकी सिर्फ़ पढ़ — टेक्स्ट, कॉन्फ़िग्स और ऐसा वेब कंटेंट जहाँ सिर्फ़ मालिक एडिट करता है, के लिए स्टैंडर्ड।",
    "640": "मालिक पढ़/लिख सकता है, ग्रुप सिर्फ़ पढ़, अन्य को एक्सेस नहीं — आंतरिक दस्तावेज़ों के लिए ठीक जहाँ पब्लिक एक्सेस नहीं चाहिए।",
    "600": "सिर्फ़ मालिक पढ़ और लिख सकता है — SSH प्राइवेट कीज़ जैसी संवेदनशील फ़ाइलों के लिए, ताकि ग्रुप/पब्लिक को कोई एक्सेस न हो।",
    "444": "सबके लिए सिर्फ़ पढ़ — इम्यूटेबल पब्लिक डॉक्यूमेंट्स के लिए उपयोगी; बदलने के लिए फिर से chmod करना होगा।",
    "400": "मालिक के लिए सिर्फ़ पढ़, और किसी को एक्सेस नहीं — क्रिप्टोग्राफ़िक कीज़ जैसी संवेदनशील स्टैटिक फ़ाइलों में इस्तेमाल।",
    "000": "किसी के पास कोई परमिशन नहीं — सब एक्सेस लॉक, जब तक परमिशन बहाल न हों; अस्थायी रूप से एक्सेस बंद करने में उपयोगी।"
  },
  "learn": {
    "title": "Linux फ़ाइल अनुमतियाँ और chmod — पूरी जानकारी",
    "intro": "अनुमतियाँ बताती हैं कि कौन फ़ाइलें पढ़, लिख या चला सकता है। जिनको ज़रूरत है सिर्फ़ उन्हें एक्सेस दो, ताकि सिस्टम सुरक्षित और सही चले।",
    "whatArePermissions": {
      "title": "फ़ाइल अनुमतियाँ क्या हैं?",
      "content": [
        "Linux सिस्टम पर कौन किसी फ़ाइल/फ़ोल्डर को पढ़, लिख या चला सकता है, यह अनुमतियाँ नियंत्रित करती हैं।",
        "ये तुम्हारा डेटा सुरक्षित रखती हैं, अनचाही बदलावों से बचाती हैं, और सुनिश्चित करती हैं कि प्रोग्राम सिर्फ़ जब चाहिए तभी चलें।",
        "अनुमतियाँ Linux सुरक्षा की बुनियाद में से एक हैं — इनके बिना कोई भी सिस्टम फ़ाइलें बदल सकता है या तुम्हारा निजी डेटा पढ़ सकता है।",
        "अनुमतियाँ chmod कमांड से सेट होती हैं, जिसे हम नीचे डिटेल में कवर करेंगे।"
      ]
    },
    "userTypes": {
      "title": "यूज़र टाइप्स",
      "intro": "Linux में अनुमतियाँ तीन अलग-अलग यूज़र कैटेगरी पर अलग-अलग लागू होती हैं:",
      "points": [
        {
          "name": "मालिक",
          "description": "आम तौर पर वही जिसने फ़ाइल बनाई या जो इसे ओन करता है।"
        },
        {
          "name": "ग्रुप",
          "description": "वे यूज़र जो फ़ाइल के ग्रुप के मेंबर हैं।"
        },
        {
          "name": "अन्य",
          "description": "सिस्टम के बाकी लोग जो न मालिक हैं, न ग्रुप में।"
        }
      ]
    },
    "permissionTypes": {
      "title": "परमिशन के प्रकार",
      "items": [
        { "name": "रीड (r)", "description": "फ़ाइल का कंटेंट देखना या फ़ोल्डर में फ़ाइलों की सूची देखना।" },
        { "name": "राइट (w)", "description": "फ़ाइल में बदलाव करना या फ़ोल्डर में फ़ाइलें जोड़ना/हटाना।" },
        { "name": "एक्ज़ीक्यूट (x)", "description": "किसी फ़ाइल को प्रोग्राम की तरह चलाना या किसी फ़ोल्डर में प्रवेश करना।" }
      ]
    },
    "chmodIntro": {
      "title": "chmod कमांड",
      "content": [
        "chmod का मतलब 'change mode' है। यह किसी फ़ाइल या फ़ोल्डर की अनुमतियाँ बदलता है।",
        "इसे सिंबॉलिक फॉर्म (अक्षर, जैसे rwx) या न्यूमेरिक फॉर्म (ऑक्टल, जैसे 777) में इस्तेमाल कर सकते हो।",
        "यह सिंगल फ़ाइल पर या पूरी डायरेक्टरी पर काम करता है।"
      ]
    },
    "symbolicRepresentation": {
      "title": "सिंबॉलिक रिप्रेज़ेंटेशन",
      "content": [
        "परमिशन बताने का पहला विकल्प सिंबॉलिक मोड है, जिसमें हर यूज़र टाइप के लिए अक्षरों से परमिशन परिभाषित होती हैं।",
        "इसे याद रखना, पढ़ना और समझना आसान है, पर ऑक्टल से थोड़ा लंबा पड़ता है।",
        "r का मतलब पढ़ना, w लिखना, x चलाना। अगर इनमें से कोई कैरेक्टर डैश (-) हो, तो वह परमिशन दी नहीं गई है।"
      ]
    },
    "octalRepresentation": {
      "title": "ऑक्टल (संख्यात्मक) रिप्रेज़ेंटेशन",
      "content": [
        "ऑक्टल मोड में परमिशन को नंबर से दिखाया जाता है।",
        "जहाँ पढ़ना = 4, लिखना = 2 और चलाना = 1।",
        "इनको जोड़कर नंबर बनता है; जैसे 7 मतलब तय यूज़र पढ़, लिख और चला सकता है।",
        "पहले की तरह क्रम मालिक, ग्रुप, फिर अन्य रहता है।",
        "तो 755 का अर्थ है मालिक के पास rwx (7), ग्रुप के पास rx (5), और अन्य के पास rx (5)।"
      ],
      "howCalculated": "अगर ये नंबर रैंडम लगें, तो समझो इन्हें बाइनरी की तरह ही गिना जाता है: 111 (rwx) = 7, 101 (r-x) = 5, और 100 (r--) = 4।"
    },
    "updateSinglePermission": {
      "title": "एक परमिशन अपडेट करना",
      "content": [
        "अक्सर तुम किसी फ़ाइल/फ़ोल्डर की सारी परमिशन नहीं, सिर्फ़ एक हिस्सा बदलना चाहोगे।",
        "जैसे मालिक के लिए सिर्फ़ एक्ज़ीक्यूट जोड़ना, पब्लिक यूज़र्स से राइट हटाना, या ग्रुप को रीड-ओनली करना।",
        "यह काम सिंबॉलिक मोड में `+`, `-` या `=` ऑपरेटर्स से होता है, फ़ॉर्मेट `chmod [who][operator][permission] file`।",
        "जहाँ `who` हो सकता है `u` (मालिक), `g` (ग्रुप), `o` (अन्य), या `a` (सब)।",
        "`operator` हो सकता है `+` (जोड़ो), `-` (हटाओ), या `=` (ठीक-ठीक सेट करो)।",
        "उदाहरण: `chmod g-w file.txt` ग्रुप से राइट परमिशन हटा देता है।"
      ]
    },
    "recursiveChanges": {
      "title": "रिकर्सिवली परमिशन बदलना",
      "content": [
        "`-R` फ़्लैग से किसी डायरेक्टरी के अंदर मौजूद सभी फ़ाइलों और फ़ोल्डरों की परमिशन बदली जा सकती है।",
        "उदाहरण: `chmod -R 755 /var/www` /var/www के नीचे हर फ़ाइल/फ़ोल्डर पर 755 लगाएगा।",
        "पर सावधान रहो, गलत रिकर्सिव बदलाव सिस्टम फ़ाइलें तोड़ सकते हैं।"
      ]
    },
    "ownership": {
      "title": "ओनरशिप और chmod",
      "content": [
        "अनुमतियाँ ओनरशिप के साथ मिलकर काम करती हैं। हर फ़ाइल का एक मालिक और एक ग्रुप होता है।",
        "किसका मालिकाना हक बदलना हो तो `chown` इस्तेमाल करो।",
        "उदाहरण: `sudo chown user:group file.txt` मालिक और ग्रुप दोनों बदल देता है।"
      ]
    },
    "specialBits": {
      "title": "विशेष बिट्स",
      "intro": "रीड/राइट/एक्ज़ीक्यूट के अलावा, Linux में कुछ स्पेशल परमिशन बिट्स भी होते हैं:",
      "items": [
        { "name": "Setuid (4)", "description": "फ़ाइल को कॉल करने वाले यूज़र की बजाय मालिक की परमिशन से चलाता है।" },
        { "name": "Setgid (2)", "description": "फ़ाइल को ग्रुप की परमिशन से चलाता है। डायरेक्टरी में नए फ़ाइलें वही ग्रुप इनहेरिट करती हैं।" },
        { "name": "Sticky (1)", "description": "डायरेक्टरी में यूज़र्स को दूसरों की फ़ाइलें डिलीट करने से रोकता है। /tmp पर आम है।" }
      ]
    },
    "commonPresets": {
      "title": "आम chmod प्रीसेट",
      "intro": "यहाँ कुछ कॉमन परमिशन सेट और उनके उपयोग हैं:",
      "table": [
        { "code": "600", "description": "मालिक पढ़/लिख सकता है। दूसरों को कोई एक्सेस नहीं। SSH प्राइवेट कीज़।" },
        { "code": "644", "description": "मालिक पढ़/लिख सकता है। बाकी पढ़ सकते हैं। कई फ़ाइलों का डिफ़ॉल्ट।" },
        { "code": "700", "description": "मालिक को पूरा कंट्रोल। दूसरों को एक्सेस नहीं। निजी स्क्रिप्ट्स।" },
        { "code": "755", "description": "मालिक पढ़/लिख/चलाता है। बाकी पढ़/चलाते हैं। स्क्रिप्ट्स में आम।" },
        { "code": "777", "description": "सब पढ़/लिख/चलाते हैं। तब तक अवॉइड करो जब तक अस्थायी साझा फ़ोल्डर न हो।" }
      ]
    },
    "debugging": {
      "title": "फ़ाइल अनुमतियों की डिबगिंग",
      "intro": "कुछ गड़बड़ हो तो ये एरर दिख सकते हैं:",
      "errors": [
        { "message": "Permission denied", "fix": "देखो फ़ाइल पर एक्सिक्यूट या फ़ोल्डर पर रीड परमिशन है कि नहीं। `chmod +x file` या `chmod +r folder` से जोड़ो।" },
        { "message": "Operation not permitted", "fix": "सिस्टम-ओन्ड फ़ाइलें हो सकती हैं, `sudo` चाहिए।" },
        { "message": "Read-only file system", "fix": "फ़ाइल सिस्टम सिर्फ़ रीड-ओनली माउंट है। राइट के साथ रीमाउंट करो या एडमिन से बात करो।" },
        { "message": "Cannot open file: No such file or directory", "fix": "पाथ गलत हो सकता है। `ls` से चेक करो।" }
      ]
    },
    "securityTips": {
      "title": "सिक्योरिटी टिप्स",
      "points": [
        "किसी फ़ाइल को तभी executable बनाओ जब सच में चलाना हो।",
        "निजी फ़ाइलों के लिए 600 और पब्लिक-रीडेबल फ़ाइलों के लिए 644 इस्तेमाल करो।",
        "777 से बचो जब तक बिल्कुल ज़रूरी न हो।",
        "बदलने से पहले `ls -l` से परमिशन चेक करो।",
        "पहले नॉन-क्रिटिकल फ़ाइलों पर टेस्ट करो।"
      ]
    },
    "nextSteps": {
      "title": "अगले कदम",
      "content": "एक टेस्ट डायरेक्टरी बनाओ और chmod को सिंबॉलिक और न्यूमेरिक, दोनों तरीकों से आज़माओ। जब कम्फ़र्टेबल हो जाओ, असली फ़ाइलों पर सुरक्षित तरीके से परमिशन सेट कर सकते हो।"
    }
  },
  "images": {
    "chmod-calculating-file-permissions": {
      "title": "Linux फ़ाइल अनुमतियाँ समझें: rwx से न्यूमेरिक कन्वर्ज़न",
      "alt": "विज़ुअल गाइड दिखाता है कैसे Linux फ़ाइल अनुमतियाँ सिंबॉलिक फ़ॉर्म (rwx, r-x, r-x) से बाइनरी होकर न्यूमेरिक फ़ॉर्म (7, 5, 5) में बदलती हैं — यूज़र, ग्रुप और अन्य के लिए।"
    },
    "chmod-modifying-file-permissions-command": {
      "title": "chmod सिंटैक्स समझें: Who, Operators और Permissions",
      "alt": "डायग्राम जो chmod सिंटैक्स को तीन हिस्सों में समझाता है: 'Who' में u=यूज़र, g=ग्रुप, o=अन्य, a=सब; 'Operators' में + जोड़ना, - हटाना, = बिल्कुल सेट करना; और 'Permissions' में r=रीड, w=राइट, x=एक्ज़ीक्यूट।"
    },
    "chmod-modifying-file-permissions-reference": {
      "title": "फ़ाइल अनुमतियाँ बदलने के chmod कमांड के उदाहरण",
      "alt": "टेबल जो chmod कमांड के उदाहरण दिखाती है — बदलाव किस पर लग रहा है, क्या ऑपरेशन है, परमिशन टाइप क्या है, और उसका समझाव। उदाहरण: u+r (मालिक को रीड जोड़ना), g-w (ग्रुप से राइट हटाना), a=x (सबको सिर्फ़ एक्ज़ीक्यूट)।"
    },
    "chmod-numeric-representation": {
      "title": "chmod 755 समझाया: न्यूमेरिक और सिंबॉलिक परमिशन",
      "alt": "डायग्राम में chmod 755 की न्यूमेरिक और सिंबॉलिक फ़ॉर्म। 755 का मतलब मालिक rwx, ग्रुप r-x, और अन्य r-x — मालिक पढ़/लिख/चलाता है, ग्रुप व अन्य सिर्फ़ पढ़ और चला सकते हैं।"
    },
    "chmod-reference-table": {
      "title": "Linux फ़ाइल परमिशन वैल्यू: ऑक्टल, सिंबॉलिक और मतलब",
      "alt": "टेबल जो ऑक्टल 0–7 को सिंबॉलिक परमिशन और उनके मतलब से मैप करती है। जैसे 0 = कोई परमिशन नहीं (---), 4 = सिर्फ़ पढ़ (r--), 5 = पढ़ + चलाना (r-x), 7 = पढ़ + लिख + चलाना (rwx)।"
    },
    "chmod-symbolic-representation": {
      "title": "Linux परमिशन स्ट्रिंग्स को समझना",
      "alt": "डायग्राम जो Linux परमिशन स्ट्रिंग्स की संरचना समझाता है: फ़ाइल टाइप इंडिकेटर, फिर मालिक/ग्रुप/पब्लिक के परमिशन। उदाहरण '-rwxr-xr-x' का मतलब है मालिक पढ़/लिख/चलाता है, ग्रुप पढ़/चलाता है, और अन्य पढ़/चलाते हैं।"
    }
  }
}
