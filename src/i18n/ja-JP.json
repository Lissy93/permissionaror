{
  "title": "Permissionator",
  "titleLong": "Permissionator | CHMOD 計算機",
  "subtitle": "Linux のファイル権限を生成・変換・検証する chmod 計算ツール",
  "subheadings": {
    "permissions": "権限",
    "output": "出力",
    "exampleCommands": "コマンド例",
    "aboutChmod": "chmod とは？",
    "commonPresets": "よく使うプリセット",
    "specialBits": "特殊ビット",
    "customOctal": "カスタム 8 進数",
    "outputFile": "出力オプション",
    "explanation": "意味",
    "octalBreakdown": "計算の内訳",
    "cheatSheet": "早見表"
  },
  "nav": {
    "subtitle": "Linux のファイル権限を生成・変換・検証する chmod 計算ツール",
    "viewOnGitHub": "GitHub",
    "viewOnGitHubTitle": "GitHub で Permissionator のソースコードを表示・編集・ダウンロード",
    "viewOnGitHubAria": "GitHub で chmod 計算ツールを見る",
    "learnChmod": "chmod を学ぶ",
    "learnChmodTitle": "chmod コマンドについて",
    "learnChmodAria": "chmod コマンドのすべてを学ぶ",
    "chmodCalculator": "chmod 計算ツール",
    "chmodCalculatorTitle": "Linux のファイル権限を生成するために chmod 計算ツールを使う",
    "chmodCalculatorAria": "chmod 計算ツールを試す",
    "settingsTitle": "ダークモードに切り替える、または言語を変更する"
  },
  "what": {
    "aboutChmod": "Linux のファイル権限は、誰がファイルを読み取り・書き込み/編集・実行できるかを制御する。これらの権限はコマンド chmod で設定する。",
    "aboutChmod2": "こうした権限は Linux と UNIX 系システムの基本機能。無断アクセスや改変を防ぎ、うっかりした変更から守り、正しいユーザーだけがプログラムを実行できるようにする。",
    "aboutChmod3": "権限を設定・更新するには `chmod` を使う。形式は `chmod [権限] [ファイル/ディレクトリ]`。権限は 8 進数（例: 755）か記号形式（例: u=rwx,g=rx,o=rx）で表せる。指定の順番は常に (1) ユーザー、(2) グループ、(3) その他/公開。",
    "commonExamples": "よくある例",
    "commonPresets": [
      {
        "number": "chmod 600 ~/.ssh/id_rsa",
        "description": "所有者は読み書き可。SSH 鍵などの私的ファイル向け"
      },
      {
        "number": "chmod 644 /var/www/html/index.html",
        "description": "所有者は読み書き可。その他は読み取りのみ。典型的なテキストファイル"
      },
      {
        "number": "chmod 700 /home/user/private_script.sh",
        "description": "所有者はフル権限。私的なスクリプトやディレクトリ"
      },
      {
        "number": "chmod 755 /usr/local/bin/my_script.sh",
        "description": "所有者とグループはフルアクセス、その他のユーザーは読み取りと実行のみ"
      },
      {
        "number": "chmod 775 /shared/project",
        "description": "全員が読み取り・実行できるが、書き込みできるのは所有者だけ。共有ディレクトリに最適"
      }
    ],
    "cards": [
      {
        "heading": "8 進数の基本",
        "description": "各役割に 1 桁を割り当てる：読み=4、書き=2、実行=1。合計して桁を出す（例: rwx=7、rw-=6、r-x=5、r--=4）。よくあるモード: ファイルは 644、ディレクトリは 755。"
      },
      {
        "heading": "記号形式",
        "description": "ユーザー (u)、グループ (g)、その他 (o) に対して +、-、= を使う。例: chmod u=rw,g=r,o= file.txt は所有者に読み書き、グループに読み取り、その他はアクセスなしを設定。"
      },
      {
        "heading": "特殊ビット",
        "description": "setuid は所有者の権限で実行、setgid はグループ権限で実行、sticky は共有ディレクトリで他人のファイルを削除できないようにする（例: /tmp）。"
      }
    ]
  },
  "examples": {
    "1": {
      "title": "例 #1 - 記号形式",
      "explanation": "このコマンドは、所有者に読み取り・書き込み・実行、グループとその他のユーザーには読み取り・実行（ただし書き込みは不可）を付与する。"
    },
    "2": {
      "title": "例 #2 - 8 進数表記",
      "explanation": "このコマンドは、所有者に読み取り・書き込み・実行、グループとその他のユーザーには読み取り・実行（ただし書き込みは不可）を付与する。"
    },
    "3": {
      "title": "例 #3 - 個別の権限を更新",
      "explanation": "このコマンドはグループの書き込み権限だけを外し、読み取りと実行はそのままにする。所有者とその他は影響なし。"
    },
    "4": {
      "title": "例 #4 - 個別の権限を更新",
      "explanation": "所有者に実行権限を付け、読み取りと書き込みは維持する。グループとその他は影響なし。下にあるオプション一覧を参照。"
    },
    "5": {
      "title": "例 #5 - 一般的なプリセット — 早見表",
      "explanation": "ファイルを所有者は読み書き可能、グループとその他は読み取りのみになる。覚えておくこと: 1 桁目＝ユーザー、2 桁目＝グループ、3 桁目＝その他。下の早見表を使えば自分で権限を組み立てられる。"
    }
  },
  "singlePermissionTool": {
    "title": "単一権限の chmod 生成ツール",
    "description1": "特定の 1 つの権限変更用の chmod コマンドを生成できる。",
    "description2": "つまり他の権限はそのまま。特定のユーザー種別に対して 1 つの権限を簡単に 変更/追加/削除 できる。",
    "outputLabel": "生成されたコマンド",
    "useThis": "このコマンドで"
  },
  "explain": {
    "roles": {
      "owner": "ファイルの所有者",
      "group": "グループのユーザー",
      "public": "その他",
      "public_note": ""
    },
    "permissions": {
      "r": "読み取り",
      "w": "書き込み",
      "x": "実行"
    },
    "explanation": {
      "can": "できる",
      "cannot": "できない",
      "and": "と",
      "butNot": "ただし",
      "butNoOneElse": "ほかの誰にもアクセスなし",
      "cannotDoAnything": "読み取り・書き込み・実行は不可",
      "noAccessForOthers": "ほかの人はアクセス不可"
    },
    "everyone": "全員"
  },
  "customExplanations": {
    "777": "全員に読み取り/書き込み/実行のフルアクセス — テストや一時的な公開用ディレクトリには便利だが、本番では非常に危険。誰でも変更・削除できてしまう。",
    "755": "ディレクトリや実行ファイルで一般的 — 所有者は変更可、他は読み取りと実行のみ。公開スクリプトや Web サーバーディレクトリに安全。",
    "750": "所有者はフル、グループは読み取りと実行、その他はアクセスなし — チーム共有スクリプトに最適で、外部を遮断できる。",
    "700": "所有者のみが読み取り・書き込み・実行 — ~/.ssh のような私的スクリプトや設定ディレクトリに最適。",
    "644": "所有者は読み書き、その他は読み取りのみ — 所有者だけが編集するテキスト、設定、Web コンテンツの標準。",
    "640": "所有者は読み書き、グループは読み取りのみ、その他はアクセスなし — 公開しない社内文書に向く。",
    "600": "所有者のみ読み書き — SSH 秘密鍵のような機微なファイル向け。グループや公開にはアクセスなし。",
    "444": "全員読み取りのみ — 変更不可の公開ドキュメント用。変更するには再度 chmod が必要。",
    "400": "所有者だけ読み取り、他はアクセス不可 — 暗号鍵などの静的で機微なファイルに使用。",
    "000": "誰にも権限なし — 権限を戻すまで完全にロック。アクセスを一時停止したい時に便利。"
  },
  "learn": {
    "title": "Linux のファイル権限と chmod のすべて",
    "intro": "権限は、どのユーザーがファイルを読み取り・書き込み・実行できるかを示す。必要な人だけがアクセスできるようにして、システムを安全かつ正常に保つことが大切。",
    "whatArePermissions": {
      "title": "ファイル権限とは？",
      "content": [
        "Linux では、誰がファイルやフォルダを読み取り・書き込み・実行できるかを権限で制御する。",
        "データを守り、意図しない変更を防ぎ、プログラムが想定どおりにだけ動くようにするために存在する。",
        "権限は Linux セキュリティの基盤のひとつ。これがなければ、誰でもシステムファイルを変えたり私的データを読めてしまう。",
        "権限は chmod コマンドで設定する。詳細はこのあとで解説。"
      ]
    },
    "userTypes": {
      "title": "ユーザー種別",
      "intro": "Linux の権限は、次の 3 つのユーザーカテゴリに個別に適用される：",
      "points": [
        {
          "name": "所有者",
          "description": "通常はファイルを作成/所有したユーザー。"
        },
        {
          "name": "グループ",
          "description": "そのファイルのグループに属するユーザー。"
        },
        {
          "name": "その他",
          "description": "所有者でもグループでもない、システム上のその他のユーザー。"
        }
      ]
    },
    "permissionTypes": {
      "title": "権限の種類",
      "items": [
        { "name": "読み取り (r)", "description": "ファイル内容の表示、フォルダ内の一覧取得。" },
        { "name": "書き込み (w)", "description": "ファイルの変更、フォルダ内での追加/削除。" },
        { "name": "実行 (x)", "description": "ファイルをプログラムとして実行、フォルダに入る。" }
      ]
    },
    "chmodIntro": {
      "title": "chmod コマンド",
      "content": [
        "chmod は「change mode」の略。ファイルやフォルダの権限を変更する。",
        "記号形式（rwx などの文字）と数値形式（777 などの 8 進数）の両方が使える。",
        "単一ファイルにもディレクトリ全体にも適用できる。"
      ]
    },
    "symbolicRepresentation": {
      "title": "記号表記",
      "content": [
        "最初の方法は記号モード。ユーザー種別ごとに文字で権限を指定する。",
        "覚えやすく読みやすい一方で、8 進数より少し冗長。",
        "r は読み取り、w は書き込み、x は実行。これがハイフン (-) に置き換わっていれば、その権限は付与されていない。"
      ]
    },
    "octalRepresentation": {
      "title": "8 進数（数値）表記",
      "content": [
        "8 進数モードは数字で権限を表す。",
        "読み取り = 4、書き込み = 2、実行 = 1。",
        "合計して数字を作る。たとえば 7 は読み取り・書き込み・実行できることを意味する。",
        "先ほどと同様、所有者・グループ・その他の順で指定する。",
        "つまり 755 は所有者が rwx (7)、グループが rx (5)、その他も rx (5) を持つ。"
      ],
      "howCalculated": "数字がランダムに見えるなら、2 進数として計算していると考えるとわかりやすい。111 (rwx) は 7、101 (r-x) は 5、100 (r--) は 4。"
    },
    "updateSinglePermission": {
      "title": "個別の権限を更新する",
      "content": [
        "すべての権限を変えるのではなく、一部だけを直したいことが多い。",
        "例：所有者だけに実行を追加、その他の書き込みを外す、グループを読み取りのみへ、など。",
        "これは記号モードで `+`、`-`、`=` を使い、`chmod [誰に][演算子][権限] ファイル` の形式で行う。",
        "「誰に」は `u`（所有者）、`g`（グループ）、`o`（その他）、`a`（全員）。",
        "「演算子」は `+`（追加）、`-`（削除）、`=`（ちょうどその状態に設定）。",
        "例: `chmod g-w file.txt` はグループから書き込み権限を外す。"
      ]
    },
    "recursiveChanges": {
      "title": "再帰的に権限を変える",
      "content": [
        "`-R` フラグで、ディレクトリ配下のすべてのファイル/フォルダに権限変更を適用できる。",
        "例: `chmod -R 755 /var/www` は /var/www 以下のすべてに 755 を適用。",
        "ただし注意。不用意な再帰変更はシステムファイルを壊すことがある。"
      ]
    },
    "ownership": {
      "title": "所有権と chmod",
      "content": [
        "権限は所有権とセットで機能する。各ファイルには所有者とグループがある。",
        "所有者を変える必要があるなら `chown` を使う。",
        "例: `sudo chown user:group file.txt` は所有者とグループを同時に変更。"
      ]
    },
    "specialBits": {
      "title": "特殊ビット",
      "intro": "読み取り/書き込み/実行に加えて、Linux には特別な権限ビットがある：",
      "items": [
        { "name": "Setuid (4)", "description": "実行ユーザーではなく所有者の権限で動かす。" },
        { "name": "Setgid (2)", "description": "グループの権限で動かす。ディレクトリでは新規ファイルがグループを継承する。" },
        { "name": "Sticky (1)", "description": "ディレクトリで、他人のファイルをユーザーが削除できないようにする。/tmp で一般的。" }
      ]
    },
    "commonPresets": {
      "title": "一般的な chmod プリセット",
      "intro": "よく使う権限セットと用途：",
      "table": [
        { "code": "600", "description": "所有者は読み書き可。他はアクセスなし。SSH の秘密鍵など。" },
        { "code": "644", "description": "所有者は読み書き可。他は読み取り可。多くのファイルの既定。" },
        { "code": "700", "description": "所有者はフル権限。他はアクセスなし。私的スクリプト。" },
        { "code": "755", "description": "所有者は読み書き実行可。他は読み取り/実行。スクリプトで一般的。" },
        { "code": "777", "description": "全員が読み書き実行可。基本は避ける。使うなら一時的な共有フォルダだけ。" }
      ]
    },
    "debugging": {
      "title": "ファイル権限のデバッグ",
      "intro": "うまく動かないときに出やすいエラー：",
      "errors": [
        { "message": "Permission denied", "fix": "ファイルに実行、フォルダに読み取り権限があるか確認。`chmod +x file` や `chmod +r folder` で追加。" },
        { "message": "Operation not permitted", "fix": "`sudo` が必要なシステム所有のファイルかもしれない。" },
        { "message": "Read-only file system", "fix": "ファイルシステムが読み取り専用でマウントされている。書き込み可能で再マウントするか管理者に相談。" },
        { "message": "Cannot open file: No such file or directory", "fix": "パスが間違っている可能性。`ls` で確認。" }
      ]
    },
    "securityTips": {
      "title": "セキュリティのコツ",
      "points": [
        "本当に必要なときだけ実行可能にする。",
        "私的ファイルは 600、公開読み取りのファイルは 644 を使う。",
        "777 はよほどの理由がない限り避ける。",
        "`ls -l` で権限を確認してから変更する。",
        "まずは重要でないファイルでテストする。"
      ]
    },
    "nextSteps": {
      "title": "次のステップ",
      "content": "テスト用ディレクトリを作って、記号形式と数値形式の両方で chmod を試してみよう。慣れたら実ファイルにも安全に権限を設定できる。"
    }
  },
  "images": {
    "chmod-calculating-file-permissions": {
      "title": "Linux のファイル権限を解説：rwx から数値への変換",
      "alt": "Linux の権限が記号形式（rwx, r-x, r-x）から 2 進数、そして数値（7, 5, 5）へ変換される流れを、ユーザー・グループ・その他ごとに示した図。"
    },
    "chmod-modifying-file-permissions-command": {
      "title": "chmod の構文を理解する：対象・演算子・権限",
      "alt": "chmod の構文を 3 セクションで説明する図。「対象」は u=ユーザー、g=グループ、o=その他、a=全員。「演算子」は + 追加、- 削除、= ちょうど設定。「権限」は r 読み取り、w 書き込み、x 実行。"
    },
    "chmod-modifying-file-permissions-reference": {
      "title": "ファイル権限を変更する chmod コマンド例",
      "alt": "chmod コマンド例の表。変更対象、操作、権限の種類、説明を一覧化。例：u+r（所有者に読み取り追加）、g-w（グループから書き込み削除）、a=x（全員を実行のみ）。"
    },
    "chmod-numeric-representation": {
      "title": "chmod 755 の説明：数値と記号の権限",
      "alt": "chmod 755 の数値表記と記号表記を示す図。数値 755 は所有者が rwx、グループとその他が r-x に対応。所有者は読み取り・書き込み・実行でき、グループとその他は読み取りと実行のみ。"
    },
    "chmod-reference-table": {
      "title": "Linux の権限値：8 進数・記号・意味",
      "alt": "8 進数の 0〜7 を記号権限と意味に対応付けた表。例：0 は権限なし (---)、4 は読み取りのみ (r--)、5 は読み取りと実行 (r-x)、7 は読み取り・書き込み・実行 (rwx)。"
    },
    "chmod-symbolic-representation": {
      "title": "Linux のパーミッション文字列を理解する",
      "alt": "Linux のパーミッション文字列の構造を説明した図。ファイル種別インジケータの後に、所有者・グループ・その他の権限が続く。例「-rwxr-xr-x」は、所有者が読み書き実行、グループとその他が読み取り実行できることを意味する。"
    }
  }
}
