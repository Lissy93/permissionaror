{
  "title": "Permissionator",
  "titleLong": "Permissionator | Калькулятор CHMOD",
  "subtitle": "Калькулятор chmod для генерации, конвертации и проверки прав доступа к файлам в Linux",
  "subheadings": {
    "permissions": "Права",
    "output": "Вывод",
    "exampleCommands": "Примеры команд",
    "aboutChmod": "Что такое chmod?",
    "commonPresets": "Типовые пресеты",
    "specialBits": "Специальные биты",
    "customOctal": "Своя восьмеричная запись",
    "outputFile": "Параметры вывода",
    "explanation": "Что это значит",
    "octalBreakdown": "Как это посчитано",
    "cheatSheet": "Шпаргалка"
  },
  "nav": {
    "subtitle": "Калькулятор chmod для генерации, конвертации и проверки прав доступа к файлам в Linux",
    "viewOnGitHub": "GitHub",
    "viewOnGitHubTitle": "Посмотреть, редактировать и скачать исходный код Permissionator на GitHub",
    "viewOnGitHubAria": "Посмотреть калькулятор chmod на GitHub",
    "learnChmod": "Изучить chmod",
    "learnChmodTitle": "О команде chmod",
    "learnChmodAria": "Узнай всё о команде chmod",
    "chmodCalculator": "Калькулятор chmod",
    "chmodCalculatorTitle": "Используй калькулятор chmod для генерации прав доступа в Linux",
    "chmodCalculatorAria": "Попробуй калькулятор chmod",
    "settingsTitle": "Переключить тёмную тему или сменить язык"
  },
  "what": {
    "aboutChmod": "Права доступа в Linux определяют, кто может читать, писать/редактировать и выполнять файл. Команда chmod используется для их задания.",
    "aboutChmod2": "Эти права — базовая функция Linux и UNIX-подобных систем. Они предотвращают несанкционированный доступ и изменения, защищают от случайных правок и гарантируют, что программы запускают только нужные пользователи.",
    "aboutChmod3": "Чтобы задать или обновить права, используем команду `chmod` в формате `chmod [права] [файл/директория]`. Права можно указать восьмерично (например, 755) или в символической форме (например, u=rwx,g=rx,o=rx). Порядок всегда один: (1) пользователь, (2) группа, (3) прочие/публичные.",
    "commonExamples": "Распространённые примеры",
    "commonPresets": [
      {
        "number": "chmod 600 ~/.ssh/id_rsa",
        "description": "Владелец: чтение/запись; приватные файлы, например ключи SSH"
      },
      {
        "number": "chmod 644 /var/www/html/index.html",
        "description": "Владелец: чтение/запись; остальным — только чтение; типичные текстовые файлы"
      },
      {
        "number": "chmod 700 /home/user/private_script.sh",
        "description": "Владелец с полным доступом; приватные скрипты или директории"
      },
      {
        "number": "chmod 755 /usr/local/bin/my_script.sh",
        "description": "Владелец и пользователи группы имеют полный доступ, прочие — только чтение и выполнение"
      },
      {
        "number": "chmod 775 /shared/project",
        "description": "Все могут читать и выполнять, но писать может только владелец; хорошо для общих директорий"
      }
    ],
    "cards": [
      {
        "heading": "Основы восьмеричной записи",
        "description": "Каждой роли соответствует цифра: чтение=4, запись=2, выполнение=1. Складывай: например, rwx = 7, rw- = 6, r-x = 5, r-- = 4. Часто используют: 644 для файлов, 755 для директорий."
      },
      {
        "heading": "Символическая форма",
        "description": "Используй буквы для пользователя (u), группы (g) и прочих (o) вместе с +, - или =. Пример: chmod u=rw,g=r,o= file.txt — даёт владельцу чтение/запись, группе — чтение, прочим — без доступа."
      },
      {
        "heading": "Специальные биты",
        "description": "setuid запускает исполняемые файлы с правами владельца; setgid — с правами группы; sticky не даёт удалять чужие файлы в общих директориях (например, /tmp)."
      }
    ]
  },
  "examples": {
    "1": {
      "title": "Пример #1 — Символическая форма",
      "explanation": "Команда даст владельцу чтение, запись и выполнение, а пользователям группы и всем остальным — чтение и выполнение (но не запись)."
    },
    "2": {
      "title": "Пример #2 — Восьмеричная нотация",
      "explanation": "Команда даст владельцу чтение, запись и выполнение, а пользователям группы и всем остальным — чтение и выполнение (но не запись)."
    },
    "3": {
      "title": "Пример #3 — Обновление одного права",
      "explanation": "Команда уберёт право записи у группы, оставив чтение и выполнение. Владелец и прочие не затронуты."
    },
    "4": {
      "title": "Пример #4 — Обновление одного права",
      "explanation": "Добавь владельцу выполнение, оставив чтение и запись как есть. Группа и прочие не затронуты. Ниже — полный список опций."
    },
    "5": {
      "title": "Пример #5 — Типовые пресеты — Краткая справка",
      "explanation": "Сделает файл доступным на чтение и запись для владельца и только на чтение для группы и прочих. Помни: первая цифра — пользователь, вторая — группа, третья — прочие. Используй шпаргалку ниже, чтобы собрать свои права."
    }
  },
  "singlePermissionTool": {
    "title": "Генератор chmod для одного изменения",
    "description1": "Этот инструмент генерирует команду chmod для одиночного изменения права.",
    "description2": "Все остальные права остаются без изменений. Можно легко изменить/добавить/убрать одно право для выбранного типа пользователя.",
    "outputLabel": "Сгенерированная команда",
    "useThis": "Используй эту команду, чтобы"
  },
  "explain": {
    "roles": {
      "owner": "Владелец файла",
      "group": "Пользователи группы",
      "public": "Все"
    },
    "permissions": {
      "r": "читать",
      "w": "писать",
      "x": "выполнять"
    },
    "explanation": {
      "can": "может",
      "cannot": "не может",
      "and": "и",
      "butNot": "но не",
      "butNoOneElse": "но больше ни у кого нет доступа",
      "cannotDoAnything": "не может читать, писать или выполнять",
      "noAccessForOthers": "у остальных нет доступа"
    },
    "everyone": "Все"
  },
  "customExplanations": {
    "777": "Полный доступ на чтение/запись/выполнение для всех — удобно для тестов или временных общих каталогов, но очень небезопасно в проде: любой может менять или удалять файлы.",
    "755": "Обычно для директорий и исполняемых файлов — владелец может изменять, остальные — читать и выполнять. Подходит для публичных скриптов или веб-каталогов.",
    "750": "Владелец с полным доступом, группа — чтение и выполнение, прочим доступа нет — хорошо для командных скриптов, закрывая доступ посторонним.",
    "700": "Только владелец может читать, писать и выполнять — идеально для приватных скриптов или конфигурационных директорий вроде ~/.ssh.",
    "644": "Владелец — чтение/запись, остальные — только чтение — стандарт для текстов, конфигов и веб-контента, который редактирует только владелец.",
    "640": "Владелец — чтение/запись, группа — только чтение, прочим — нет доступа — удобно для внутренних документов без публичного доступа.",
    "600": "Только владелец может читать и писать — типично для чувствительных файлов вроде приватных ключей SSH; у группы и публики доступа нет.",
    "444": "Только чтение для всех — полезно для неизменяемых публичных документов; чтобы править, снова потребуется chmod.",
    "400": "Только чтение для владельца, больше никто не имеет доступа — используют для чувствительных статичных файлов, например криптоключей.",
    "000": "Никаких прав ни у кого — блокирует доступ до восстановления прав; полезно для временного отключения доступа."
  },
  "learn": {
    "title": "Всё о правах файлов в Linux и chmod",
    "intro": "Права показывают, какие пользователи могут читать, писать или выполнять файлы. Важно давать доступ только тем, кому он нужен, чтобы система оставалась безопасной и стабильной.",
    "whatArePermissions": {
      "title": "Что такое права доступа?",
      "content": [
        "Права контролируют, кто может читать, писать или выполнять файл или папку в системе Linux.",
        "Они нужны, чтобы защищать данные, предотвращать нежелательные изменения и запускать программы только когда это задумано.",
        "Права — один из столпов безопасности Linux: без них любой мог бы менять системные файлы или читать твои приватные данные.",
        "Права задаются командой chmod, о ней ниже подробнее."
      ]
    },
    "userTypes": {
      "title": "Типы пользователей",
      "intro": "В Linux права применяются отдельно к трём категориям пользователей:",
      "points": [
        {
          "name": "Владелец",
          "description": "Обычно тот, кто создал или кому принадлежит файл."
        },
        {
          "name": "Группа",
          "description": "Пользователи, входящие в группу файла."
        },
        {
          "name": "Прочие",
          "description": "Все остальные в системе, кто не владелец и не в группе."
        }
      ]
    },
    "permissionTypes": {
      "title": "Типы прав",
      "items": [
        { "name": "Чтение (r)", "description": "Просмотр содержимого файла или список файлов в папке." },
        { "name": "Запись (w)", "description": "Изменение файла или добавление/удаление файлов в папке." },
        { "name": "Выполнение (x)", "description": "Запуск файла как программы или вход в папку." }
      ]
    },
    "chmodIntro": {
      "title": "Команда chmod",
      "content": [
        "chmod расшифровывается как «change mode». Меняет права файла или папки.",
        "Её можно использовать в символической форме (буквы, например rwx) или в числовой (восьмеричной, например 777).",
        "Работает для отдельных файлов или целых директорий."
      ]
    },
    "symbolicRepresentation": {
      "title": "Символическая запись",
      "content": [
        "Первый способ — символический режим: буквы задают права для каждого типа пользователей.",
        "Так легче запоминать, читать и понимать, но это многословнее, чем восьмеричная запись.",
        "r — чтение, w — запись, x — выполнение. Если вместо буквы стоит дефис (-), право не выдано."
      ]
    },
    "octalRepresentation": {
      "title": "Восьмеричная (числовая) запись",
      "content": [
        "Восьмеричный режим использует цифры для представления прав.",
        "Где чтение = 4, запись = 2, выполнение = 1.",
        "Складываем, чтобы получить число; например 7 — значит, указанный пользователь может читать, писать и выполнять файл.",
        "Как и раньше, порядок: владелец, группа, прочие.",
        "Так, 755 означает: у владельца rwx (7), у группы rx (5), у прочих rx (5)."
      ],
      "howCalculated": "Если числа кажутся случайными, знай: они считаются как двоичные. 111 (rwx) — это 7, 101 (r-x) — 5, 100 (r--) — 4."
    },
    "updateSinglePermission": {
      "title": "Обновление одного права",
      "content": [
        "Часто не хочется менять все права файла/папки, а только одну часть.",
        "Например, добавить выполнение только владельцу, убрать запись у публичных пользователей или сделать группе только чтение.",
        "Это делается в символическом режиме операторами `+`, `-` или `=`, по формату `chmod [кто][оператор][право] файл`.",
        "Где `кто` — `u` (владелец), `g` (группа), `o` (прочие) или `a` (все).",
        "`оператор` — `+` (добавить), `-` (убрать) или `=` (задать ровно).",
        "Пример: `chmod g-w file.txt` убирает у группы право на запись."
      ]
    },
    "recursiveChanges": {
      "title": "Рекурсивное изменение прав",
      "content": [
        "Используй флаг `-R`, чтобы изменить права для всех файлов и папок внутри директории.",
        "Например: `chmod -R 755 /var/www` применит 755 ко всему под /var/www.",
        "Будь осторожен: рекурсивные изменения при ошибках могут поломать системные файлы."
      ]
    },
    "ownership": {
      "title": "Владение и chmod",
      "content": [
        "Права работают вместе с владением. У каждого файла есть владелец и группа.",
        "Нужно сменить владельца — используй `chown`.",
        "Пример: `sudo chown user:group file.txt` меняет и владельца, и группу."
      ]
    },
    "specialBits": {
      "title": "Специальные биты",
      "intro": "Помимо чтения/записи/выполнения, в Linux есть специальные биты прав:",
      "items": [
        { "name": "Setuid (4)", "description": "Запускает файл с правами владельца вместо прав вызывающего пользователя." },
        { "name": "Setgid (2)", "description": "Запускает файл с правами группы. В директориях новые файлы наследуют группу." },
        { "name": "Sticky (1)", "description": "В директориях не даёт пользователям удалять чужие файлы. Часто на /tmp." }
      ]
    },
    "commonPresets": {
      "title": "Типовые пресеты chmod",
      "intro": "Ниже — распространённые наборы прав и их назначение:",
      "table": [
        { "code": "600", "description": "Владелец может читать/писать. Другим — нет доступа. Приватные ключи SSH." },
        { "code": "644", "description": "Владелец может читать/писать. Остальные — читать. Значение по умолчанию для многих файлов." },
        { "code": "700", "description": "Владелец с полным доступом. Остальным — нет доступа. Приватные скрипты." },
        { "code": "755", "description": "Владелец может читать/писать/выполнять. Остальные — читать/выполнять. Часто для скриптов." },
        { "code": "777", "description": "Все могут читать/писать/выполнять. Избегай, кроме временных общих папок." }
      ]
    },
    "debugging": {
      "title": "Отладка прав доступа",
      "intro": "Если что-то не работает, могут появиться такие ошибки:",
      "errors": [
        { "message": "Permission denied", "fix": "Проверь, есть ли у тебя выполнение для файлов или чтение для папок. Добавь `chmod +x file` или `chmod +r folder`." },
        { "message": "Operation not permitted", "fix": "Возможно, нужны права `sudo` для системных файлов." },
        { "message": "Read-only file system", "fix": "Файловая система примонтирована только для чтения. Перемонтируй с записью или обратись к администратору." },
        { "message": "Cannot open file: No such file or directory", "fix": "Путь может быть неверным. Проверь с помощью `ls`." }
      ]
    },
    "securityTips": {
      "title": "Советы по безопасности",
      "points": [
        "Делай файл исполняемым только когда это реально нужно.",
        "Для приватных файлов используй 600, для публично читаемых — 644.",
        "Избегай 777, если только это не крайняя необходимость.",
        "Перед изменением смотри права через `ls -l`.",
        "Сначала тестируй изменения на некритичных файлах."
      ]
    },
    "nextSteps": {
      "title": "Дальше",
      "content": "Создай тестовую директорию и поэкспериментируй с chmod в символической и числовой формах. Когда освоишься, можно безопасно задавать права на реальных файлах."
    }
  },
  "images": {
    "chmod-calculating-file-permissions": {
      "title": "Права файлов в Linux: от rwx к числам",
      "alt": "Визуальная схема: как права Linux переходят из символической формы (rwx, r-x, r-x) в двоичную и далее в числа (7, 5, 5) для пользователя, группы и прочих."
    },
    "chmod-modifying-file-permissions-command": {
      "title": "Синтаксис chmod: кто, операторы и права",
      "alt": "Диаграмма синтаксиса chmod с тремя секциями: «Кто» — u (user), g (group), o (others), a (all); «Операторы» — + добавить, - убрать, = установить точно; «Права» — r читать, w писать, x выполнять."
    },
    "chmod-modifying-file-permissions-reference": {
      "title": "Примеры команд chmod для изменения прав",
      "alt": "Таблица примеров команд chmod с указанием, на кого действует изменение, какая операция и какой тип права, плюс пояснение. Например: u+r — добавить чтение владельцу, g-w — убрать запись у группы, a=x — оставить только выполнение для всех."
    },
    "chmod-numeric-representation": {
      "title": "chmod 755: числовые и символические права",
      "alt": "Диаграмма chmod 755 в числовой и символической формах. 755 соответствует rwx для владельца, r-x для группы и r-x для прочих: владелец может читать, писать и выполнять, остальные — только читать и выполнять."
    },
    "chmod-reference-table": {
      "title": "Значения прав в Linux: восьмеричные, символические и смысл",
      "alt": "Таблица соответствия восьмеричных значений 0–7 символическим правам и их смыслу. Например, 0 — нет прав (---), 4 — только чтение (r--), 5 — чтение и выполнение (r-x), 7 — чтение, запись и выполнение (rwx)."
    },
    "chmod-symbolic-representation": {
      "title": "Как читать строки прав в Linux",
      "alt": "Схема структуры строки прав Linux: индикатор типа файла, затем права для владельца, группы и публики. Пример «-rwxr-xr-x»: владелец — чтение/запись/выполнение; группа — чтение/выполнение; прочие — чтение/выполнение."
    }
  }
}
